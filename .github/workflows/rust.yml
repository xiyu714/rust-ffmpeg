name: Rust

on:
  workflow_dispatch

jobs:
  build-test-lint-windows:
      name: Windows - FFmpeg ${{ matrix.ffmpeg_version }} - build, test and lint
      runs-on: windows-latest
      strategy:
        matrix:
          include:
            - ffmpeg_version: latest
              ffmpeg_download_url: https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-full-shared.7z
        fail-fast: false
      env:
        FFMPEG_DOWNLOAD_URL: ${{ matrix.ffmpeg_download_url }}
      steps:
        - uses: actions/checkout@v2
        - name: Install dependencies
          run: |
            $VCINSTALLDIR = $(& "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationPath)
            Add-Content $env:GITHUB_ENV "LIBCLANG_PATH=${VCINSTALLDIR}\VC\Tools\LLVM\x64\bin`n"
            Invoke-WebRequest "${env:FFMPEG_DOWNLOAD_URL}" -OutFile ffmpeg-release-full-shared.7z
            7z x ffmpeg-release-full-shared.7z
            mkdir ffmpeg
            mv ffmpeg-*/* ffmpeg/
            Add-Content $env:GITHUB_ENV "FFMPEG_DIR=${pwd}\ffmpeg`n"
            Add-Content $env:GITHUB_PATH "${pwd}\ffmpeg\bin`n"
        - name: Set up Rust
          uses: actions-rs/toolchain@v1
          with:
            toolchain: stable
            override: true
            components: rustfmt, clippy
        - name: Build
          run: |
            cargo build --examples
        - name: Test
          run: |
            cargo test --examples
        - name: Lint
          run: |
            cargo clippy --examples -- -D warnings
        - name: Check format
          run: |
            cargo fmt -- --check
